import tkinter as tk
from tkinter import messagebox

class EstoqueApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Gestão de Estoque e Beneficiários")
        self.root.geometry("400x500")

        # Listas para armazenar os dados
        self.estoque = []
        self.beneficiarios = []

        # Título do app
        self.title_label = tk.Label(root, text="App de Estoque e Beneficiários", font=("Arial", 16))
        self.title_label.pack(pady=10)

        # Frame para adicionar itens ao estoque
        self.estoque_frame = tk.Frame(root)
        self.estoque_frame.pack(pady=10)

        self.estoque_label = tk.Label(self.estoque_frame, text="Adicionar Item ao Estoque:")
        self.estoque_label.grid(row=0, column=0, padx=5)

        self.item_entry = tk.Entry(self.estoque_frame)
        self.item_entry.grid(row=0, column=1)

        self.add_item_btn = tk.Button(self.estoque_frame, text="Adicionar", command=self.adicionar_item)
        self.add_item_btn.grid(row=0, column=2, padx=5)

        # Frame para exibir estoque
        self.estoque_list_label = tk.Label(root, text="Estoque Atual:")
        self.estoque_list_label.pack(pady=5)

        self.estoque_listbox = tk.Listbox(root, height=5)
        self.estoque_listbox.pack()

        # Frame para adicionar beneficiários
        self.beneficiarios_frame = tk.Frame(root)
        self.beneficiarios_frame.pack(pady=10)

        self.beneficiario_label = tk.Label(self.beneficiarios_frame, text="Adicionar Beneficiário")
        self.beneficiario_label.grid(row=0, column=0, columnspan=2)

        self.nome_label = tk.Label(self.beneficiarios_frame, text="Nome:")
        self.nome_label.grid(row=1, column=0, padx=5)

        self.nome_entry = tk.Entry(self.beneficiarios_frame)
        self.nome_entry.grid(row=1, column=1)

        self.cpf_label = tk.Label(self.beneficiarios_frame, text="CPF:")
        self.cpf_label.grid(row=2, column=0, padx=5)

        self.cpf_entry = tk.Entry(self.beneficiarios_frame)
        self.cpf_entry.grid(row=2, column=1)

        self.add_beneficiario_btn = tk.Button(self.beneficiarios_frame, text="Adicionar", command=self.adicionar_beneficiario)
        self.add_beneficiario_btn.grid(row=3, column=0, columnspan=2, pady=10)

        # Frame para exibir beneficiários
        self.beneficiarios_list_label = tk.Label(root, text="Beneficiários Registrados:")
        self.beneficiarios_list_label.pack(pady=5)

        self.beneficiarios_listbox = tk.Listbox(root, height=5)
        self.beneficiarios_listbox.pack()

    def adicionar_item(self):
        item = self.item_entry.get()
        if item:
            self.estoque.append(item)
            self.estoque_listbox.insert(tk.END, item)
            self.item_entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Erro", "Por favor, insira o nome do item.")

    def adicionar_beneficiario(self):
        nome = self.nome_entry.get()
        cpf = self.cpf_entry.get()
        if nome and cpf:
            beneficiario = f"{nome} - CPF: {cpf}"
            self.beneficiarios.append(beneficiario)
            self.beneficiarios_listbox.insert(tk.END, beneficiario)
            self.nome_entry.delete(0, tk.END)
            self.cpf_entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Erro", "Por favor, insira o nome e o CPF do beneficiário.")


if __name__ == "__main__":
    root = tk.Tk()
    app = EstoqueApp(root)
    root.mainloop()